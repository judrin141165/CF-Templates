---

Description: >-
    This Stack Create three  EC2 instances  connected to Loadblancer to distribute traffic
    using round robin
    In the future one  of the EC2 instances will be  configured as Ansible master for automation



Parameters:

  VPC:
    Description: VPC-ID of your existing VPC
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: Must be existing VPC
  PublicSUbnetId:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public Subnet
    ConstraintDescription: Must be existing Subnet
#########################################################
#EC2 Instances and load balancer
###########################################################






  NameOfService:
    Description: The tag name associated with this stack.
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: EC2 Instance type
    Type: String
    Default: t2.micro
  ExistingSecurityGroup:
    Description: An existing security group ID (optional).
    Default: NONE
    Type: String
    AllowedValues:
      - default
      - NONE
Conditions:
    CreateNewSecurityGroup: !Equals [!Ref ExistingSecurityGroup, NONE]

Mappings:
  RegionMap:
    us-east-2:
      "HVM64": "ami-08b6f2a5c291246a0"

Resources:

  LnEc2InstanceWebServer1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap,!Ref AWS::Region,HVM64]

      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref NameOfService, 'webserver-1' ,'ansible-master'] ]
      SecurityGroupIds:
        - !Ref LnSecurityGroup

      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType




  LnEc2InstanceWebServer2:
    Type: AWS::EC2::Instance
    Properties:

      ImageId: !FindInMap [RegionMap,!Ref AWS::Region,HVM64]



      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref NameOfService, 'webserver' ,'2'] ]
      SecurityGroupIds:
        - !Ref LnSecurityGroup


      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType

  LnEc2InstanceWebServer3:
    Type: AWS::EC2::Instance
    Properties:

      ImageId: !FindInMap [RegionMap,!Ref AWS::Region,HVM64]



      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref NameOfService, 'webserver' ,'3'] ]
      SecurityGroupIds:
        - !Ref LnSecurityGroup


      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType




  LnSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH to client host. Created using CloudFormation template
      VpcId: !Ref VPC

      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 3000
        ToPort: 3000
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 3005
        ToPort: 3005
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ansible-core-keypair
        - Key: Description

          Value: Security Group created for SSH and HTTP access to instances.
  LnElasticIp1:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref LnEc2InstanceWebServer1
  LnElasticIp2:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref LnEc2InstanceWebServer2
  LnElasticIp3:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref LnEc2InstanceWebServer3


  
Outputs:
  LnPublicIpAddressInstance1:
    Description: The Public IP address for EC2 instances
    Value: !GetAtt
      - LnEc2InstanceWebServer1
      - PublicIp


  LnPublicIpAddressInstance2:
    Description: The Public IP address for EC2 instances
    Value: !GetAtt
      - LnEc2InstanceWebServer2
      - PublicIp
  LnPublicIpAddressInstance3:
    Description: The Public IP address for EC2 instances
    Value: !GetAtt
      - LnEc2InstanceWebServer3
      - PublicIp


  LnSecurityGroupID:
    Description: Name of the security Group
    Value: !If [CreateNewSecurityGroup,!Ref LnSecurityGroup,!Ref ExistingSecurityGroup]







